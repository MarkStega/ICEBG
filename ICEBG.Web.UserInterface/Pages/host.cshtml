@page "/host"
@namespace ICEBG.Web.UserInterface.Pages
@using HttpSecurity.AspNet
@using ICEBG.Client
@using ICEBG.Web.UserInterface
@using Microsoft.AspNetCore.Components.Web
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject IHttpSecurityService HttpSecurityService

@{
    RenderMode RenderMode = PlatformDetermination.kIsBlazorServer ? RenderMode.ServerPrerendered : RenderMode.WebAssemblyPrerendered;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ICEBG (UserInterface)</title>

    <base href="~/" />

    <link href="_content/Material.Blazor/material.blazor.min.css" integrity="@HttpSecurityService.GetFileHashString("material.blazor.min.css")" rel="stylesheet" />
    <link href="_content/ICEBG.Client/css/icebg.min.css" integrity="@HttpSecurityService.GetFileHashString("icebg.min.css")" rel="stylesheet" />

    <link rel="icon" type="image/png" href="_content/ICEBG.Client/pwa/favicon-16x16.png" sizes="16x16">
    <link rel="icon" type="image/png" href="_content/ICEBG.Client/pwa/favicon-32x32.png" sizes="32x32">
    <link rel="icon" type="image/png" href="_content/ICEBG.Client/pwa/favicon-96x96.png" sizes="96x96">

    <link rel="apple-touch-icon" sizes="512x512" href="_content/ICEBG.Client/ios-images/512.png" />
    <link rel="apple-touch-icon" sizes="192x192" href="_content/ICEBG.Client/ios-images/192.png" />

    @if (PlatformDetermination.kIsBlazorServer)
    {
        <component type="typeof(HeadOutlet)" render-mode="@RenderMode" />
    }
    else
    {
        <link rel="manifest" href="_content/ICEBG.Client/pwa/manifest.json" />
    }
</head>

<body>
    @if (PlatformDetermination.kIsBlazorServer)
    {
        <component type="typeof(App)" render-mode="Server" />
    }
    else
    {
        <div id="app">
            <svg class="loading-progress">
                <circle r="40%" cx="50%" cy="50%" />
                <circle r="40%" cx="50%" cy="50%" />
            </svg>
            <div class="loading-progress-text"></div>
        </div>
    }

    <div id="blazor-error-ui">
        <div id="reload-dialog" class="mdc-dialog">
            <div id="reload-container" class="mdc-dialog__container">
                <div class="mdc-dialog__surface"
                     role="alertdialog"
                     aria-modal="true"
                     aria-labelledby="my-dialog-title"
                     aria-describedby="my-dialog-content">
                    <h2 class="mdc-dialog__title" id="my-dialog-title">
                        <span class="material-icons-outlined">error</span> Website Error
                    </h2>
                    <div class="mdc-dialog__content" id="my-dialog-content">
                        <environment include="Staging,Production">
                            Click the button to reload the website.
                        </environment>
                        <environment include="Development">
                            An unhandled exception has occurred. See browser dev tools for details.
                        </environment>
                    </div>
                    <div class="mdc-dialog__actions" tabindex="1">
                        <button id="reload-button" type="button" class="mdc-button mdc-dialog__button mdc-button--raised" data-mdc-dialog-action="discard">
                            <div class="mdc-button__ripple"></div>
                            <span class="mdc-button__label">Reload</span>
                        </button>
                    </div>
                </div>
            </div>
            <div id="reload-scrim" class="mdc-dialog__scrim"></div>
        </div>
    </div>

    <script src="_content/GoogleAnalytics.Blazor/googleanalytics.blazor.js" integrity="@HttpSecurityService.GetFileHashString("googleanalytics.blazor.js")"></script>
    <script src="_content/Material.Blazor/material.blazor.min.js" integrity="@HttpSecurityService.GetFileHashString("material.blazor.min.js")"></script>
    <script src="_content/ICEBG.Client/js/icebg.min.js" integrity="@HttpSecurityService.GetFileHashString("icebg.min.js")"></script>

    @if (PlatformDetermination.kIsBlazorServer)
    {
        <script src="_framework/blazor.server.js" nonce="@HttpSecurityService.GetNonce()"></script>
    }
    else
    {
        <script src="_framework/blazor.webassembly.js" integrity="@HttpSecurityService.GetFileHashString("blazor.webassembly.js")"></script>
        @*
        <script>navigator.serviceWorker.register('service-worker.js');</script>
        *@    
    }

</body>
</html>
