name: GithubActionsRelease

############################################################################################################
# All of thes jobs runs commands only on a tag push in the MarkStega\ICEBG repository
# An 'ExitWorkflow' action is sorely needed
############################################################################################################
# NUGET_API_KEY is valid through 9/11/2021
############################################################################################################

on:
  push:
    tags:
      - '*' # Push events to matching *, i.e. 1.0, 20.15.10

env:
  appNameDS: 'icebg.web.ds'
  appNameUI: 'icebg.web.ui'
 
jobs:

############################################################################################################
# These jobs are used to gate actions. By creating these jobs we don't need to proliferate the repo checks
############################################################################################################
  perform-deployment:
    name: Perform deployment
    runs-on: ubuntu-latest
    if: github.repository == 'MarkStega/ICEBG' && github.actor != 'dependabot[bot]'
    steps:
    - name: Nothing to see here
      run: echo ""

  skip-deployment:
    name: Skip deployment
    runs-on: ubuntu-latest
    if: github.repository != 'MarkStega/ICEBG' || github.actor == 'dependabot[bot]'
    steps:
    - name: Nothing to see here
      run: echo ""

############################################################################################################
# Store the version information
############################################################################################################
  version:
    name: Set version suffix
    runs-on: ubuntu-latest

    steps:
    - id: get
      run: |
        echo "::set-output name=suffix::$(date +'%Y-%m-%d--%H-%M-%S')--${GITHUB_REF/refs\/tags\//}"
    - id: show
      run: |
        echo "Suffix: ${{ steps.get.outputs.suffix }}"
    outputs:
      suffix: ${{ steps.get.outputs.suffix }}

############################################################################################################
# Build and deploy blazor DS image
############################################################################################################
  build-deploy-ds:
    name: Build ICEBG DS docker image
    needs: [version, perform-deployment]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2

    - name: 'Docker login'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Publish, tag, and push DS image
      run: |
        dotnet publish ICEBG.Web.DataServices/ICEBG.Web.DataServices.csproj --os linux --arch x64 --configuration Azure -p:PublishProfile=DefaultContainer -p:Version=${{ needs.version.outputs.suffix }} -p:ContainerImageName=${{env.appNameDS}}
        docker tag ${{env.appNameDS}}:${{ needs.version.outputs.suffix }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.appNameDS}}:${{ needs.version.outputs.suffix }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.appNameDS}}:${{ needs.version.outputs.suffix }}

############################################################################################################
# Build and deploy blazor UI image
############################################################################################################
  build-deploy-ui:
    name: Build ICEBG UI docker image
    needs: [version, perform-deployment]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2

    - name: 'Docker login'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Publish, tag, and push UI image
      run: |
        dotnet publish ICEBG.Web.UserInterface/ICEBG.Web.UserInterface.csproj --os linux --arch x64 --configuration Azure -p:PublishProfile=DefaultContainer -p:Version=${{ needs.version.outputs.suffix }} -p:ContainerImageName=${{env.appNameUI}}
        docker tag ${{env.appNameUI}}:${{ needs.version.outputs.suffix }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.appNameUI}}:${{ needs.version.outputs.suffix }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.appNameUI}}:${{ needs.version.outputs.suffix }}

############################################################################################################
# Build blazor DS image
############################################################################################################
  build-ds:
    name: Build ICEBG DS docker image
    needs: [version, skip-deployment]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2

    - name: Build DS image
      run: |
        dotnet build ICEBG.Web.DataServices/ICEBG.Web.DataServices.csproj --os linux --arch x64 --configuration Azure -p:Version=${{ needs.version.outputs.suffix }}

############################################################################################################
# Build blazor UI image
############################################################################################################
  build-ui:
    name: Build ICEBG UI docker image
    needs: [version, skip-deployment]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2

    - name: Build UI image
      run: |
        dotnet build ICEBG.Web.UserInterface/ICEBG.Web.UserInterface.csproj --os linux --arch x64 --configuration Azure -p:PublishProfile=DefaultContainer -p:Version=${{ needs.version.outputs.suffix }} -p:ContainerImageName=${{env.appNameUI}}
