name: GithubActionsWIP

on:
  push:
    branches:
      - 'main'

  pull_request:
    branches:
      - 'main'

#env:
#  appNameDS: 'icebg.web.ds.wip'
#  appNameUI: 'icebg.web.ui.wip'
#  dockerFileDS: './ICEBG.Web.DataServices/Dockerfile'
#  dockerFileUI: './ICEBG.Web.UserInterface/Dockerfile'

env:
  appNameDS: 'ICEBG.Web.DataServices'
  appNameUI: 'ICEBG.Web.UserInterface'
  dockerFileDS: './ICEBG.Web.DataServices/Dockerfile'
  dockerFileUI: './ICEBG.Web.UserInterface/Dockerfile'

jobs:

############################################################################################################
# Store the version information
############################################################################################################
  version:
    name: Set version suffix
    runs-on: ubuntu-latest

    steps:
    - id: get
      run: |
        echo "::set-output name=suffix::$(date +'%Y-%m-%d--%H-%M-%S')--WIP"
    - id: show
      run: |
        echo "${{ steps.get.outputs.suffix }}"
    outputs:
      suffix: ${{ steps.get.outputs.suffix }}
      
############################################################################################################
# Build blazor DS container
############################################################################################################
  build-ds:
    name: Build ICEBG DS docker container
    needs: [version]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2

    #- name: 'Build and push DS image'
    #  uses: azure/docker-login@v1
    #  with:
    #    login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
    #    username: ${{ secrets.REGISTRY_USERNAME }}
    #    password: ${{ secrets.REGISTRY_PASSWORD }}
    #- run: |
    #    docker build . --file ${{env.dockerFileDS}} -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.appNameDS}}:${{ needs.version.outputs.suffix }} --build-arg version=${{ needs.version.outputs.suffix }}
    #    docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.appNameDS}}:${{ needs.version.outputs.suffix }}

    - name: Publish, tag, and push UI image
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        dotnet publish ICEBG.Web.DataServices/ICEBG.Web.DataServices.csproj --os linux --arch x64 --configuration Azure -p:PublishProfile=DefaultContainer -p:Version=${{ needs.version.outputs.suffix }}
        sudo docker images -a
        docker tag ${{env.appNameDS}}:${{ needs.version.outputs.suffix }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.appNameDS}}:${{ needs.version.outputs.suffix }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.appNameDS}}:${{ needs.version.outputs.suffix }}

############################################################################################################
# Build blazor UI container
############################################################################################################
  build-ui:
    name: Build ICEBG UI docker container
    needs: [version]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2

    - name: Publish, tag, and push UI image
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        dotnet publish ICEBG.Web.UserInterface/ICEBG.Web.UserInterface.csproj --os linux --arch x64 --configuration Azure -p:PublishProfile=DefaultContainer -p:Version=${{ needs.version.outputs.suffix }}
        sudo docker images -a
        docker tag ${{env.appNameUI}}:${{ needs.version.outputs.suffix }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.appNameUI}}:${{ needs.version.outputs.suffix }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.appNameUI}}:${{ needs.version.outputs.suffix }}
