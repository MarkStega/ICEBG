name: GithubActionsWIP

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

env:
#  buildPlatform: 'Any CPU'
#  buildConfiguration: 'Release'
#  outputCSFB: ${{github.workspace}}/siteCSFB
  webassemblyDC: './docker-compose-blazor-webassembly.yml'
  serverDC: './docker-compose-blazor-server.yml'
#  projectCSFB: 'Website.BlazorWebAssembly/Server/Website.BlazorWebAssembly.Server.csproj'
#  projectTest: 'CompressedStaticFiles.AspNetCore.Test/CompressedStaticFiles.AspNetCore.Test.csproj'

jobs:

############################################################################################################
# These jobs are used to gate actions. By creating these jobs we don't need to proliferate the repo checks
############################################################################################################
  is-on-fork:
    name: Running on a fork?
    runs-on: ubuntu-latest
    if: github.repository != 'MarkStega/ICEBG'
    steps:
    - name: Nothing to see here
      run: echo ""

  is-on-primary-repository:
    name: Running on MarkStega/ICEBG?
    runs-on: ubuntu-latest
    if: github.repository == 'MarkStega/ICEBG'
    steps:
    - name: Nothing to see here
      run: echo ""

############################################################################################################
# Store the version information
############################################################################################################
  version:
    name: Set version suffix
    runs-on: ubuntu-latest

    steps:
    - id: get
      run: |
        echo "::set-output name=suffix::$(date +'%Y-%m-%d--%H-%M-%S')"
    - id: show
      run: |
        echo "${{ steps.get.outputs.suffix }}"
    outputs:
      suffix: ${{ steps.get.outputs.suffix }}
      
############################################################################################################
# Build blazor server containers
############################################################################################################
  build-ds-ui:
    name: Build ICEBG docker containers
    needs: [info, version]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: 'Build and push images'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build . --file ./ICEBG.Web.DataServices/Dockerfile -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/icebg.web.ds:${{ needs.version.outputs.suffix }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/icebg.web.ds:${{ needs.version.outputs.suffix }}
        docker build . --file ./ICEBG.Web.UserInterface/Dockerfile -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/icebg.web.ui:${{ needs.version.outputs.suffix }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/icebg.web.ui:${{ needs.version.outputs.suffix }}

    - name: 'Deploy to Azure Container Instances'
      uses: 'azure/aci-deploy@v1'
      with:
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
        image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/icebg.web.ds:${{ github.sha }}
        registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        name: cricebg
        location: 'east us'

    - name: 'Deploy to Azure Container Instances'
      uses: 'azure/aci-deploy@v1'
      with:
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
        image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/icebg.web.ui:${{ github.sha }}
        registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        name: cricebg
        location: 'east us'