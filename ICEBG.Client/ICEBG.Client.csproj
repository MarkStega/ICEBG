<Project Sdk="Microsoft.NET.Sdk.Razor">

	<PropertyGroup>
		<OutputType>Library</OutputType>
		<Version>2023-01-01--13-00-00--WIP</Version>
	</PropertyGroup>

	<PropertyGroup>
		<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
	</PropertyGroup>

	<ItemGroup>
		<AssemblyAttribute Include="ICEBG.Client.BuildDateAttribute">
			<_Parameter1>$([System.DateTime]::UtcNow.ToString("yyyy-MM-dd"))</_Parameter1>
		</AssemblyAttribute>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Blazored.LocalStorage" Version="4.4.0" />
		<PackageReference Include="GoogleAnalytics.Blazor" Version="1.0.3" />
		<PackageReference Include="libphonenumber-csharp" Version="8.13.24" />
		<PackageReference Include="Material.Blazor.MD3" Version="5.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="8.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="8.0.0" />
	</ItemGroup>

	<ItemGroup>
		<Folder Include="wwwroot\css\" />
		<Folder Include="wwwroot\js\" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\ApplicationConfiguration\ApplicationConfiguration.csproj" />
		<ProjectReference Include="..\DataTier\DataTier.csproj" />
		<ProjectReference Include="..\SharedUtilities\SharedUtilities.csproj" />
	</ItemGroup>

	<ItemGroup>
		<InputStaticAssetsScripts Include="$(ProjectDir)WebAssets\Scripts\*.ts" />
		<OutputStaticAssetsScripts Include="$(ProjectDir)wwwroot\js\icebg.js;wwwroot\js\icebg.min.js" />

		<Content Remove="@(OutputStaticAssetsScripts)" />
		<Content Include="@(OutputStaticAssetsScripts)" />
	</ItemGroup>

	<ItemGroup>
		<InputStaticAssetsStyles Include="$(ProjectDir)WebAssets\Styles\*.scss;" />
		<OutputStaticAssetsStyles Include="$(ProjectDir)wwwroot\css\icebg.css;wwwroot\css\icebg.min.css" />

		<Content Remove="@(OutputStaticAssetsStyles)" />

		<InputStaticAssetsStyles Remove="WebAssets\Styles\_material-components-web.scss" />
		<Content Include="@(OutputStaticAssetsStyles)" />
	</ItemGroup>

	<ItemGroup>
		<UpToDateCheckInput Include="@(InputStaticAssetsScripts)" Set="Scripts" />
		<UpToDateCheckOutput Include="@(OutputStaticAssetsScripts)" Set="Scripts" />
		<UpToDateCheckInput Include="@(InputStaticAssetsStyles)" Set="Styles" />
		<UpToDateCheckOutput Include="@(OutputStaticAssetsStyles)" Set="Styles" />
	</ItemGroup>

	<!--Add Importance="high" to see this step logged in the VS build-->
	<Target Name="CheckIfNpmExists" BeforeTargets="PreBuildEvent" AfterTargets="WWWRootFileCopy">
		<Message Text="***** npm install (test)" />
		<Exec Command="npm install" ContinueOnError="true" StandardOutputImportance="low" StandardErrorImportance="low" LogStandardErrorAsError="false" IgnoreExitCode="true">
			<Output TaskParameter="ExitCode" PropertyName="NpmReturnCode" />
		</Exec>
		<Message Text="***** 'npm install' return code was $(NpmReturnCode) (0 indicates npm is available)" />
	</Target>

	<Target Name="ErrorOutput" BeforeTargets="PreBuildEvent" AfterTargets="CheckIfNpmExists" Condition=" '$(NpmReturnCode)' != '0' ">
		<Message Importance="high" Text="**********************************************************************************" />
		<Message Importance="high" Text="**********************************************************************************" />
		<Message Importance="high" Text="**********************************************************************************" />
		<Message Importance="high" Text=" CSS and JS not built due to the lack of a proper development environment" />
		<Message Importance="high" Text=" See https://material-blazor.com/docs/articles/DevelopmentEnvironment.html" />
		<Message Importance="high" Text="**********************************************************************************" />
		<Message Importance="high" Text="**********************************************************************************" />
		<Message Importance="high" Text="**********************************************************************************" />
	</Target>

	<Target Name="BuildScripts" Inputs="@(InputStaticAssetsScripts)" Outputs="@(OutputStaticAssetsScripts)" BeforeTargets="PreBuildEvent" AfterTargets="CheckIfNpmExists" Condition=" '$(NpmReturnCode)' == '0' ">
		<RemoveDir Directories="$(ProjectDir)wwwroot/js" />

		<Message Importance="high" Text="***** npm install (scripts)" />
		<Exec Command="npm install" />

		<Message Importance="high" Text="***** npm run build-scripts" />
		<Exec Command="npm run build-scripts" />

		<Message Importance="high" Text="***** npm run build-js" />
		<Exec Command="npm run build-js" />

		<Message Importance="high" Text="***** npm run build-min-js" />
		<Exec Command="npm run build-min-js" />

		<Message Importance="high" Text="***** delete *temp.js" />
		<ItemGroup>
			<FilesToDelete Include="wwwroot/js/*temp.js" />
		</ItemGroup>
		<Delete Files="@(FilesToDelete)" />
	</Target>

	<Target Name="BuildStyles" Inputs="@(InputStaticAssetsStyles)" Outputs="@(OutputStaticAssetsStyles)" BeforeTargets="PreBuildEvent" AfterTargets="CheckIfNpmExists" Condition=" '$(NpmReturnCode)' == '0' ">
		<Message Importance="high" Text="***** npm install (styles)" />
		<Exec Command="npm install" />

		<Message Importance="high" Text="***** npm run build-css" />
		<Exec Command="npm run build-css" />

		<Message Importance="high" Text="***** npm run build-min-css" />
		<Exec Command="npm run build-min-css" />

	</Target>

</Project>
